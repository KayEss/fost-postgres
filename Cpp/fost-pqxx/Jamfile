import path ;


REQUIREMENTS =
        -<threading>multi # Works around a bug in boost.build
        <target-os>windows:<source>../../../fost-base/External//winsock
    ;

if [ path.exists "C:/Program Files/PostgreSQL/8.3" ] {
    pgdll comerr32 gssapi32 k5sprt32 krb5_32 libiconv2 libintl3 ;
    REQUIREMENTS = $(REQUIREMENTS)
            <target-os>windows:<source>../../../PostgreSQL//comerr32
            <target-os>windows:<source>../../../PostgreSQL//gssapi32
            <target-os>windows:<source>../../../PostgreSQL//k5sprt32
            <target-os>windows:<source>../../../PostgreSQL//krb5_32
            <target-os>windows:<source>../../../PostgreSQL//libiconv2
            <target-os>windows:<source>../../../PostgreSQL//libintl3
        ;
}

lib fost-pqxx
    :
        ../../../PostgreSQL//libpq
        [ path.glob $(TOP)/../PostgreSQL/libpqxx/src/ : *.cxx ]
    :
        <define>PQXX_HAVE_BOOST_SMART_PTR
        <define>PQXXTR1=boost

        <target-os>darwin:<include>/usr/local/pgsql/include/
        <target-os>darwin:<include>/Library/PostgreSQL/9.1/include/

        <target-os>linux:<include>/usr/include/postgresql

        $(REQUIREMENTS)

        <target-os>windows:<define>_CRT_SECURE_NO_WARNINGS
        <target-os>windows:<define>PQXX_SHARED
        <target-os>windows:<define>PQXX_INTERNAL
    ;

fost-install fost-pqxx ;
